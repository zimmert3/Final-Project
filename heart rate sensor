// Austin Zimmers
//Tutorial Webpage: https://pulsesensor.com/pages/getting-advanced


#define USE_ARDUINO_INTERRUPTS true    // Set-up low-level interrupts for most acurate BPM math.
#include <PulseSensorPlayground.h>     // Includes the PulseSensorPlayground Library.   
#include <LiquidCrystal.h>

const int alarm = 8; //to alert high heart rate
const int setPoint = 115; // what heart rate triggers alarm

const int rs = 12, en = 11, d4 = 5, d5 = 4, d6 = 3, d7 = 2;
LiquidCrystal lcd(rs, en, d4, d5, d6, d7);

//  Variables
const int PulseWire = 0;       // PulseSensor PURPLE WIRE connected to ANALOG PIN 0
const int LED13 = 13;          
int Threshold = 550;           
                               
                                
                              
PulseSensorPlayground pulseSensor;  // Creates an instance of the PulseSensorPlayground object called "pulseSensor"


void setup() {   

  Serial.begin(9600);          // For Serial Monitor
    lcd.begin(16, 2);
 
  // Configure the PulseSensor object, by assigning our variables to it. 
  pulseSensor.analogInput(PulseWire);   
  pulseSensor.blinkOnPulse(LED13);       //auto-magically blink Arduino's LED with heartbeat.
  pulseSensor.setThreshold(Threshold);   

  // Double-check the "pulseSensor" object was created and "began" seeing a signal. 
   if (pulseSensor.begin()) {
    Serial.println("We created a pulseSensor Object !");  //This prints one time at Arduino power-up,  or on Arduino reset.  
  }
}



void loop() {

 int myBPM = pulseSensor.getBeatsPerMinute();  // Calls function on our pulseSensor object that returns BPM as an "int".
                                               // "myBPM" hold this BPM value now. 

if (pulseSensor.sawStartOfBeat()) {            // Constantly test to see if "a beat happened". 
 Serial.println("â™¥  A HeartBeat Happened ! "); // If test is "true", print a message "a heartbeat happened".
 Serial.print("BPM: ");                        // Print phrase "BPM: " 
 Serial.println(myBPM); // Print the value inside of myBPM. 
 lcd.clear();
 lcd.setCursor(0, 0);
 lcd.print("BPM:");
 lcd.setCursor(10, 0);
 lcd.print(myBPM);
 lcd.setCursor(0, 1);
 lcd.print("Dangerous:");
 lcd.setCursor(10, 1);
 lcd.print(setPoint);
}

  delay(20);                  

  if(myBPM > setPoint){
    tone(alarm, 1000, 800); // pin, frequency, duration
  }
}

  
